=======================
3.상수와 형 변환
=======================
- 정수형 상수와 실수형 상수의 표현 자료형
  1. 정수형 상수 int형으로 표현
  2. 실수형 상수 double형으로 표현


- 형 변환> 데이터타입 변환

   1. 자동 형 변환(묵시적 형 변환)

   2. 강제 형 변환


---------------------------------------------------------------------------------------
■ 자동 형 변환(Implict Conversion) 규칙

   1        2         4       8       4        8 
  byte -> short ->   int -> long -> float -> double
          char  -> ┘    
            2

  정수 byte, short, int, long // 큰 그릇에 있는 것은 작은 그릇에 옮기지 못한다.
 
  byte 5 + int 10 -> int 5 + int 10
  short 10 + byte 5 -> short 10 + short 10
  // 자동형변환규칙의 순서로 간다. 왼 -> 오



  실수 float, double //
   
  long -> float -> 될까? 의문 -> 가능  
  - float 표현범위가 long보다 훨씬 컸었다. 
  - float이 표현할 수 있는 건 long이 표현 못함
  
  int 20 + float 20.0 -> float 20.0 + float 20.0



  문자 char -> 문자 저장이 아니라 아스키코드 값이 저장되어 있음
               -> 그래서 자동 형 변환 규칙에 포함되어 있는 것이다.
  'A' + 10 -> 65 + 10 -> 75
  // 자동 형 변환 규칙 그림에서 short 밑에 있는 이유는 둘 다 2바이트이기 때문임.


---------------------------------------------------------------------------------------
■ 접미사 이야기

  int num = 10000000000; // 백억  
  long num = 10000000000; // 백억
  // 둘 다 오류남
  // 오른쪽의 '백억'이라는 숫자가 문제인 것.


<정수> - 접미사 l, L : 이번만큼은 long 형에다가 담아줘
  int num = 10000000000l;   
	↓
  long num = 10000000000l;
  // 자동 형 변환 규칙으로 long에서 int x


<실수> - 접미사  F,f는 float형 상수 표현을 의미한다.
  float pi = 3.14;
  // 왼쪽을 가리고 오른쪽만 보면 8바이트의 double에다 잡아준다.
  // 그리고 왼쪽을 본다. float = double
  // 그리고 대입을 하면  자동 형 변환규칙에 맞지 않아 에러가 난다.
          ↓
  float pi = 3.14f;
  
  










=======================
4.연산자
=======================

